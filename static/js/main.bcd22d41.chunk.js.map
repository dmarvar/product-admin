{"version":3,"sources":["assets/img/background.png","utils/theme.js","utils/firebase.js","services/auth.js","login/loginForm.jsx","login/login.jsx","login/index.js","common/loader/loader.jsx","common/loader/index.js","login/loader.jsx","common/button.jsx","common/navBar.jsx","common/box.jsx","intranet/main/notificationBox.jsx","intranet/main/notificationList.jsx","intranet/main/hits.jsx","intranet/main/performance.jsx","intranet/main/storage.jsx","intranet/main/orders.jsx","intranet/main/main.jsx","intranet/main/index.js","common/table/tableStyles.js","common/table/tableWindow.jsx","common/table/table.jsx","common/table/index.js","utils/tablesHeaders.js","intranet/products/styles.js","services/http.js","hooks/useHttp.jsx","intranet/products/uploadFile.jsx","intranet/products/index.js","intranet/products/products.jsx","services/actions.js","intranet/accounts/accounts.jsx","intranet/accounts/index.js","common/form/styles.js","common/form/index.js","common/form/selector.jsx","common/form/inputText.jsx","common/form/button.jsx","common/form/radioGroup.jsx","intranet/product/productMainForm.jsx","hooks/useImageUpload.jsx","common/imageUpload/imageUpload.jsx","common/imageUpload/index.js","intranet/product/styles.js","intranet/product/productPricesForm.jsx","intranet/product/index.js","intranet/product/product.jsx","intranet/orders/orders.jsx","intranet/orders/index.js","intranet/order/styles.js","intranet/order/orderForm.jsx","intranet/order/index.js","intranet/order/order.jsx","intranet/intranet.jsx","intranet/index.js","App.jsx","serviceWorker.js","services/reducers.js","services/store.js","index.js"],"names":["module","exports","bgColor","bgColorDark","bgColorLight","bgColorDarkTrans","cWhite","cOrange","cOrangeDark","bShadow","bp","phone","tablet","desktop","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loadingUser","setLoadingUser","useEffect","auth","onAuthStateChanged","user","Provider","value","Signout","signOut","Fsection","styled","section","p","theme","Button","button","LoginForm","submit","formik","useFormik","initialValues","email","password","onSubmit","values","validationSchema","Yup","required","handleSubmit","handleChange","isSubmitting","errors","touched","handleBlur","htmlFor","id","name","type","onChange","onBlur","disabled","Wrapper","div","Background","Card","Login","history","sentStatus","setStatus","submitForm","useCallback","a","async","signInWithEmailAndPassword","alert","useContext","to","Loader","loader","className","text","action","onClick","Nav","nav","NavItems","NavBar","icon","faEllipsisH","faBars","faTachometerAlt","faShoppingCart","faMotorcycle","box","title","Box","notificationBox","data","src","pic","alt","message","time","notificationList","map","item","i","key","options","legend","labels","fontColor","fontSize","scales","yAxes","ticks","beginAtZero","xAxes","dataSet","label","color","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","hits","dataToPlot","months","datasets","featured","popular","latest","display","performance","Object","keys","borderWidth","hoverBackgroundColor","hoverBorderColor","optionsDoughnut","storage","Table","table","orders","console","log","k","toUpperCase","o","l","k1","Content","Dashboard","connect","state","storeData","dasbhoardPage","latestHits","notifications","TableS","TableW","BusquedaWrapper","Busqueda","input","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","flatColumns","count","length","colSpan","style","textAlign","width","e","target","undefined","placeholder","columns","filter","redirect","loading","useTable","useGlobalFilter","useBlockLayout","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","RenderRow","totalColumnsWidth","index","row","getRowProps","original","cells","cell","getCellProps","height","flex","render","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","faSortDown","faSortUp","itemCount","itemSize","useRef","OrdersTable","Header","accessor","OrdersDetailTable","ProductsTable","CategoriesTable","Container","RigthSection","visibility","axiosInstance","axios","create","baseURL","apiEndPoint","interceptors","response","use","res","error","status","Promise","reject","get","post","put","delete","useGetHttp","url","setData","setloading","http","then","Upload","selectedFile","file","setFile","files","JSON","stringify","changeUploader","fd","FormData","append","getAll","Campo1","Products","products","productsPage","categories","catLoad","prodLoad","memoizedProducts","useMemo","background","push","href","SET_INITIAL_DATA","UPDATE_ACCOUNTS","SET_PRODUCT_LIST","SET_ORDERS_LIST","Form","form","accounts","selection","updateAccounts","preventDefault","props","deleteImage","profilePic","setState","changeValue","account","URL","createObjectURL","changeSelection","upload","refs","fileUploader","click","this","prevProps","faTrashAlt","ref","defaultValue","Component","Accounts","accountsPage","dispatch","payload","InputTextStyles","ButtonStyles","Selector","rest","InputText","RadioGroup","setFieldValue","marginBottom","inputValue","checked","paddingLeft","initialValuesMain","ownerId","reference","description","categoryId","imageURL","measurementUnit","weight","active","categoryName","ProductMainForm","enableReinitialize","max","defaultListener","ImageUpload","initialImg","changeListener","image","setImage","searchFile","current","ProductDetailForm","ImageContainer","ProductPricesForm","store","storeId","storeName","Product","path","match","params","storesByProduct","product","postProduct","newImgFile","setNewImgFile","uploadTask","getDownloadURL","getImageUrl","jsonProduct","marginRight","formatDate","date","d","Date","getDate","getMonth","getFullYear","getHours","getMinutes","Orders","loadingOrders","memoizedOrders","FormOrder","OrderBody","OrderNav","OrderForm","orderInCourse","Order","orderHeader","loadingHeader","orderDetail","loadingDetail","orderMain","orderStatusId","orderStartDate","orderFinishDate","customerId","clientName","clientLastName","clientAddress","clientMobile","clientEmail","main","Intranet","saveProducts","saveOrders","component","defaults","PrivateRoute","onLoadData","Theme","Boolean","window","location","hostname","InitialState","ordersPage","initState","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcd22d41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.a6bf6b45.png\";","export default {\n  bgColor: \"#4e657a\",\n  bgColorDark: \"#435c70\",\n  bgColorLight: \"#567086\",\n  bgColorDarkTrans: \"rgba(67, 92, 112, 0.9)\",\n  cWhite: \"white\",\n  cOrange: \"#f5a623\",\n  cOrangeDark: \"#e67e00\",\n  bShadow: \"-1px 10px 18px 0px rgba(0, 0, 0, 0.75)\",\n  bp: {\n    phone: \"480px\",\n    tablet: \"720px\",\n    desktop: \"1024px\"\n  }\n};\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBxAuFYZeWFVPxu2oTI6qoMFvt0_N5wIqI\",\n  authDomain: \"merkar-5e730.firebaseapp.com\",\n  databaseURL: \"https://merkar-5e730.firebaseio.com\",\n  projectId: \"merkar-5e730\",\n  storageBucket: \"merkar-5e730.appspot.com\",\n  messagingSenderId: \"687568701283\",\n  appId: \"1:687568701283:web:c6dbd0f3bc01d5f410f556\",\n  measurementId: \"G-ZVXSQB8FHK\"\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\n\nexport default app;\n","import React, { useEffect, useState } from \"react\";\nimport app from \"../utils/firebase\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loadingUser, setLoadingUser] = useState(true);\n  useEffect(() => {\n    app.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoadingUser(false);\n    });\n  }, []);\n  return (\n    <AuthContext.Provider value={{ currentUser, loadingUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const Signout = () => {\n  app.auth().signOut();\n};\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\";\n\nconst Fsection = styled.section`\n  padding-bottom: 10px;\n  label {\n    display: block;\n    color: white;\n  }\n  input {\n    /* margin: 0px 20px; */\n    padding: 5px 10px;\n    background-color: transparent;\n    color: white;\n    outline: none;\n    width: calc(100% - 40px);\n    font-size: 12px;\n    .pac-selected,\n    .pac-item,\n    .pac-container {\n      background-color: transparent;\n    }\n  }\n  button {\n    color: ${p => p.theme.cWhite};\n    padding: 5px 15px;\n    border-color: ${p => p.theme.cOrange};\n    background: ${p => p.theme.cOrange};\n    margin: 20px auto 30px;\n  }\n  div {\n    min-height: 22px;\n    display: block;\n    color: #d24d57;\n    font-size: 14px;\n    text-align: center;\n    font-weight: 700;\n  }\n`;\n\nconst Button = styled.button`\n  color: ${p => p.theme.cWhite};\n  padding: 10px 15px;\n  border-color: ${p => p.theme.cOrange};\n  background-color: ${p => p.theme.cOrange};\n  margin: 20px 10px 30px;\n  &:hover {\n    background-color: ${p => p.theme.cOrangeDark};\n    border-color: ${p => p.theme.cOrangeDark};\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nconst LoginForm = ({ submit }) => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      submit(values);\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(\"*Email invalido\")\n        .required(\"*Digita el email\"),\n      password: Yup.string().required(\"*Digita la contraseña\")\n    })\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    isSubmitting,\n    errors,\n    touched,\n    handleBlur\n  } = formik;\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Fsection>\n          <label htmlFor=\"email\">Usuario</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n          <div>{touched.email && errors.email ? errors.email : null}</div>\n        </Fsection>\n        <Fsection>\n          <label htmlFor=\"password\">Contraseña</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n          />\n          <div>\n            {touched.password && errors.password ? errors.password : null}\n          </div>\n        </Fsection>\n        <Button disabled={isSubmitting} type=\"submit\">\n          Ingresar\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useContext, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../services/auth\";\nimport app from \"../utils/firebase\";\nimport LoginForm from \"./loginForm\";\nimport Background from \"../assets/img/background.png\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: ${`url('${Background}')`} no-repeat center center fixed;\n  background-size: cover;\n`;\nconst Card = styled.div`\n  h2 {\n    padding: 30px 30px 10px;\n    letter-spacing: 3px;\n  }\n  hr {\n    border-top: solid 1px rgba(255, 255, 255, 0.7);\n    padding-bottom: 20px;\n  }\n  min-width: 300px;\n  text-align: center;\n  background-color: ${p => p.theme.bgColorDarkTrans};\n  padding: 20px;\n  box-shadow: ${p => p.theme.bShadow};\n`;\n\nconst Login = ({ history }) => {\n  const [status, setStatus] = useState({ sentStatus: false });\n  const submitForm = useCallback(\n    async ({ email, password }) => {\n      setStatus({ sentStatus: true });\n      try {\n        await app.auth().signInWithEmailAndPassword(email, password);\n        setStatus({ sentStatus: false });\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) return <Redirect to=\"/\" />;\n  return (\n    <Wrapper>\n      <Card>\n        <section>\n          <h2>REGISTRATE</h2>\n          <hr />\n        </section>\n        <LoginForm submit={submitForm}></LoginForm>\n      </Card>\n    </Wrapper>\n  );\n};\nexport default Login;\n","import Login from \"./login\";\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  border: 16px solid ${p => p.theme.bgColorLight};\n  border-radius: 50%;\n  border-top: 16px solid ${p => p.theme.cOrangeDark};\n  width: 100%;\n  height: 100%;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 1s linear infinite;\n  /* Safari */\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\nconst Loader = () => {\n  return <Wrapper />;\n};\n\nexport default Loader;\n","import Loader from \"./loader\";\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"../common/loader\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n  div.box {\n    width: 120px;\n    height: 120px;\n  }\n`;\n\nexport default function loader() {\n  return (\n    <Wrapper>\n      <div className=\"box\">\n        <Loader></Loader>\n      </div>\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  color: ${p => p.theme.cWhite};\n  padding: 10px 15px;\n  border-color: ${p => p.theme.cOrange};\n  background-color: ${p => p.theme.cOrange};\n  margin: 20px 10px 30px;\n  &:hover {\n    background-color: ${p => p.theme.cOrangeDark};\n    border-color: ${p => p.theme.cOrangeDark};\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nexport default function button({ text, action }) {\n  return <Button onClick={action}>{text}</Button>;\n}\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"../common/button\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext, Signout } from \"../services/auth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTachometerAlt,\n  faShoppingCart,\n  faUserAlt,\n  faBars,\n  faMotorcycle,\n  faEllipsisH\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: ${p => p.theme.bgColorLight};\n  h1 {\n    color: ${p => p.theme.cOrange};\n  }\n  & > div:nth-child(2) {\n    display: none;\n    color: white;\n    font-size: 25px;\n  }\n  @media screen and (max-width: 720px) {\n    & > div:first-child {\n      display: none;\n    }\n    & > div:nth-child(2) {\n      display: block;\n    }\n  }\n`;\nconst NavItems = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: center;\n  a {\n    padding: 20px 30px;\n    height: 100%;\n    color: ${p => p.theme.cWhite};\n    span {\n      display: block;\n      font-size: 40px;\n    }\n    &:hover {\n      background: ${p => p.theme.cOrange};\n      text-decoration: none;\n    }\n  }\n  @media screen and (max-width: 720px) {\n    display: none;\n    position: absolute;\n    background: ${p => p.theme.bgColorDark};\n    top: 100px;\n  }\n`;\n\nexport default function NavBar() {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Nav>\n      <div>\n        <h1>\n          <FontAwesomeIcon icon={faEllipsisH} />\n          WECOME\n        </h1>\n      </div>\n      <div id=\"burger\">\n        <FontAwesomeIcon icon={faBars} />\n      </div>\n      <NavItems>\n        <Link to=\"/\">\n          <span>\n            <FontAwesomeIcon icon={faTachometerAlt} />\n          </span>\n          Dashboard\n        </Link>\n        <Link to=\"/products\">\n          <span>\n            <FontAwesomeIcon icon={faShoppingCart} />\n          </span>\n          Productos\n        </Link>\n        <Link to=\"/orders\">\n          <span>\n            <FontAwesomeIcon icon={faMotorcycle} />\n          </span>\n          Ordenes\n        </Link>\n        {/* <Link to=\"/accounts\">\n          <span>\n            <FontAwesomeIcon icon={faUserAlt} />\n          </span>\n          Cuentas\n        </Link> */}\n      </NavItems>\n      <Button text=\"Salir\" action={Signout} />\n    </Nav>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: ${p => p.theme.bgColorDark};\n  padding: 20px;\n  margin: 30px 0;\n`;\n\nexport default function box({ children, title }) {\n  return (\n    <Wrapper>\n      <h5>{title}</h5>\n      {children}\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  background-color: ${p => p.theme.bgColor};\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  margin: 10px 0px;\n  img {\n    width: 80px;\n    height: 80px;\n    object-fit: cover;\n    background: orange;\n    border-radius: 40px;\n    margin-right: 20px;\n  }\n  p {\n    margin-bottom: 0px;\n  }\n  span {\n    color: gray;\n  }\n`;\n\nexport default function notificationBox({ data }) {\n  return (\n    <Box>\n      <img src={data.pic} alt=\"\" />\n      <div>\n        <p>{data.message}</p>\n        <p>\n          <span>{data.time}</span>\n        </p>\n      </div>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NBox from \"./notificationBox\";\n\nconst Wrapper = styled.section`\n  height: 280px;\n  overflow: scroll;\n`;\n\nexport default function notificationList({ data }) {\n  return (\n    <Wrapper>\n      {data.map((item, i) => (\n        <NBox data={item} key={i}></NBox>\n      ))}\n      {data.map((item, i) => (\n        <NBox data={item} key={i}></NBox>\n      ))}\n      {data.map((item, i) => (\n        <NBox data={item} key={i}></NBox>\n      ))}\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    labels: {\n      fontColor: \"white\",\n      fontSize: 12\n    }\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 11,\n          beginAtZero: true\n        }\n      }\n    ],\n    xAxes: [\n      {\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 11,\n          beginAtZero: true\n        }\n      }\n    ]\n  }\n};\n\nlet dataSet = (label, color, data) => {\n  return {\n    label,\n    fill: false,\n    lineTension: 0.2,\n    backgroundColor: \"rgba(255, 255, 255,1)\",\n    borderColor: color,\n    borderCapStyle: \"butt\",\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: \"miter\",\n    pointBorderColor: color,\n    pointBackgroundColor: \"#fff\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgba(255,255,255,1)\",\n    pointHoverBorderColor: color,\n    pointHoverBorderWidth: 2,\n    pointRadius: 2,\n    pointHitRadius: 10,\n    data\n  };\n};\n\nexport default function hits({ data }) {\n  // Acomodar datos\n  const dataToPlot = {\n    labels: data.months,\n    datasets: [\n      dataSet(\"Featured\", \"rgba(66, 245, 242,1)\", data.featured),\n      dataSet(\"Popular\", \"rgba(245, 66, 236,1)\", data.popular),\n      dataSet(\"Latest\", \"rgba(32, 180, 32,1)\", data.latest)\n    ]\n  };\n  return <Line data={dataToPlot} options={options} />;\n}\n","import React from \"react\";\nimport { HorizontalBar } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    display: false,\n    labels: {\n      fontColor: \"white\",\n      fontSize: 18\n    }\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 11\n        }\n      }\n    ],\n    xAxes: [\n      {\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 11,\n          beginAtZero: true\n        }\n      }\n    ]\n  }\n};\n\nexport default function performance({ data }) {\n  let dataToPlot = {\n    labels: Object.keys(data),\n    datasets: [\n      {\n        backgroundColor: Object.keys(data),\n        borderWidth: 1,\n        hoverBackgroundColor: Object.keys(data),\n        hoverBorderColor: \"gray\",\n        data: Object.values(data)\n      }\n    ]\n  };\n\n  return <HorizontalBar data={dataToPlot} options={options} />;\n}\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst optionsDoughnut = {\n  legend: {\n    labels: {\n      fontColor: \"white\",\n      fontSize: 14\n    }\n  }\n};\n\nexport default function storage({ data }) {\n  const dataToPlot = {\n    labels: Object.keys(data),\n    datasets: [\n      {\n        data: Object.values(data),\n        backgroundColor: Object.keys(data)\n      }\n    ]\n  };\n\n  return <Doughnut data={dataToPlot} options={optionsDoughnut} />;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 300px;\n  overflow: scroll;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  font-size: 14px;\n  thead {\n    background-color: ${p => p.theme.bgColor};\n  }\n  tbody tr:hover {\n    border-bottom: 1px solid ${p => p.theme.cOrange};\n  }\n  tr {\n    border: 1px solid ${p => p.theme.bgColorDark};\n  }\n  th {\n    padding: 10px;\n    color: white;\n  }\n  td {\n    background-color: ${p => p.theme.bgColorLight};\n    padding: 10px;\n    color: white;\n  }\n`;\n\nexport default function orders({ data }) {\n  console.log(data);\n  if (!data[0]) return <div />;\n  return (\n    <Wrapper>\n      <Table>\n        <thead>\n          <tr>\n            {Object.keys(data[0]).map((i, k) => (\n              <th key={i + k}>{i.toUpperCase()}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((o, k) => (\n            <tr key={o + k}>\n              {Object.values(o).map((l, k1) => (\n                <td key={l + k1}>{l}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"../../common/box\";\nimport NotificationList from \"./notificationList\";\nimport Hits from \"./hits\";\nimport Performance from \"./performance\";\nimport Storage from \"./storage\";\nimport Orders from \"./orders\";\n\n//REDUX\nimport { connect } from \"react-redux\";\n\nconst Content = styled.section`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  & > div {\n    width: 49%;\n  }\n  & > div:last-child {\n    width: 100%;\n  }\n  @media screen and (max-width: 720px) {\n    & > div {\n      width: 100%;\n    }\n  }\n`;\n\nfunction main({ storeData }) {\n  console.log(storeData);\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      <Content>\n        <Box title=\"Lastest Hits\">\n          <Hits data={storeData.dasbhoardPage.latestHits} />\n        </Box>\n        <Box title=\"Performance\">\n          <Performance data={storeData.dasbhoardPage.performance} />\n        </Box>\n        <Box title=\"Storage Information\">\n          <Storage data={storeData.dasbhoardPage.performance} />\n        </Box>\n        <Box title=\"Notification List\">\n          <NotificationList\n            data={storeData.dasbhoardPage.notifications}\n          ></NotificationList>\n        </Box>\n        <Box title=\"Orders List\">\n          <Orders data={storeData.dasbhoardPage.orders} />\n        </Box>\n      </Content>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeData: state\n  };\n};\n\nexport default connect(mapStateToProps)(main);\n","import Dashboard from \"./main\";\nexport default Dashboard;\n","import styled from \"styled-components\";\n\nexport const TableS = styled.table`\n  font-size: 12px;\n  text-align: left;\n  width: 100%;\n  thead {\n    background-color: ${p => p.theme.bgColor};\n  }\n  tbody tr:hover {\n    border-left: 2px solid ${p => p.theme.cOrange};\n    cursor: default;\n  }\n  tr {\n    border: 1px solid ${p => p.theme.bgColorDark};\n  }\n  th {\n    padding: 10px;\n    user-select: none;\n    color: white;\n    border-bottom: 2px solid ${p => p.theme.bgColor};\n    border-top: 2px solid ${p => p.theme.bgColor};\n    &.isSortedDesc,\n    &.isSortedAsc {\n      border-bottom: 2px solid ${p => p.theme.cOrange};\n    }\n    span {\n      color: ${p => p.theme.cOrange};\n      font-size: 16px;\n      margin-left: 10px;\n    }\n  }\n  td {\n    background-color: ${p => p.theme.bgColorLight};\n    padding: 10px;\n    color: white;\n  }\n`;\nexport const TableW = styled.table`\n  font-size: 12px;\n  text-align: left;\n  width: 100%;\n  thead {\n    background-color: ${p => p.theme.bgColor};\n    tr {\n      width: 100% !important;\n    }\n  }\n  tbody tr:hover {\n    border-left: 2px solid ${p => p.theme.cOrange};\n    cursor: default;\n  }\n  tr {\n    border: 1px solid ${p => p.theme.bgColorDark};\n  }\n  th {\n    padding: 10px;\n    user-select: none;\n    color: white;\n    border-bottom: 2px solid ${p => p.theme.bgColor};\n    border-top: 2px solid ${p => p.theme.bgColor};\n    &.isSortedDesc,\n    &.isSortedAsc {\n      border-bottom: 2px solid ${p => p.theme.cOrange};\n    }\n    span {\n      color: ${p => p.theme.cOrange};\n      font-size: 16px;\n      margin-left: 10px;\n    }\n  }\n  td {\n    background-color: ${p => p.theme.bgColorLight};\n    padding: 10px;\n    color: white;\n  }\n`;\n\nexport const BusquedaWrapper = styled.div`\n  display: flex;\n  margin: -10px;\n  padding: 15px;\n  justify-content: center;\n  border-bottom: 3px solid ${p => p.theme.bgColorDark};\n`;\n\nexport const Busqueda = styled.input`\n  /* width: 100%; */\n  margin-left: 20px;\n  padding: 10px;\n  height: 18px;\n  background: none;\n  border: none;\n  border-bottom: 1px solid white;\n  color: white;\n  outline: none;\n  &::placeholder {\n    color: #ddd;\n  }\n`;\n","import React from \"react\";\nimport { TableW, Busqueda, BusquedaWrapper } from \"./tableStyles\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  useBlockLayout\n} from \"react-table\";\nimport { FixedSizeList } from \"react-window\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport Loader from \"../../login/loader\";\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n  flatColumns\n}) {\n  const count = preGlobalFilteredRows.length;\n  return (\n    <tr>\n      <th\n        colSpan={flatColumns.length}\n        style={{\n          textAlign: \"left\",\n          width: \"100%\"\n        }}\n      >\n        <BusquedaWrapper>\n          <span>Buscar: </span>\n          <Busqueda\n            value={globalFilter || \"\"}\n            onChange={e => {\n              setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n            }}\n            placeholder={`${count} registros...`}\n          />\n        </BusquedaWrapper>\n      </th>\n    </tr>\n  );\n}\n\nfunction Table({\n  columns = [],\n  data = [],\n  filter = null,\n  redirect = null,\n  loading = false\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    flatColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    totalColumnsWidth\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useGlobalFilter,\n    useBlockLayout,\n    useSortBy\n  );\n\n  const RenderRow = React.useCallback(\n    ({ index, style }) => {\n      const row = rows[index];\n      prepareRow(row);\n      return (\n        <tr\n          {...row.getRowProps({\n            style\n          })}\n          // style={{ height: \"auto\" }}\n          onClick={() => (redirect ? redirect(row.original) : null)}\n        >\n          {row.cells.map(cell => {\n            return (\n              <td\n                {...cell.getCellProps()}\n                style={{ width: \"auto\", height: \"100%\", flex: \"1\" }}\n              >\n                {cell.render(\"Cell\")}\n              </td>\n            );\n          })}\n        </tr>\n      );\n    },\n    [prepareRow, rows]\n  );\n\n  return (\n    <TableW {...getTableProps()}>\n      <thead>\n        {!filter && (\n          <GlobalFilter\n            preGlobalFilteredRows={preGlobalFilteredRows}\n            globalFilter={state.globalFilter}\n            setGlobalFilter={setGlobalFilter}\n            flatColumns={flatColumns}\n          />\n        )}\n        {headerGroups.map((headerGroup, i) => (\n          <tr\n            {...headerGroup.getHeaderGroupProps()}\n            style={{ display: \"flex\", width: \"100%\" }}\n          >\n            {headerGroup.headers.map(column => (\n              <th\n                {...column.getHeaderProps(column.getSortByToggleProps())}\n                className={\n                  column.isSorted\n                    ? column.isSortedDesc\n                      ? \"isSortedAsc\"\n                      : \"isSortedDesc\"\n                    : \"\"\n                }\n                style={{ flex: \"1\" }}\n              >\n                {column.render(\"Header\")}\n                <span>\n                  {column.isSorted ? (\n                    column.isSortedDesc ? (\n                      <FontAwesomeIcon icon={faSortDown} />\n                    ) : (\n                      <FontAwesomeIcon icon={faSortUp} />\n                    )\n                  ) : (\n                    \"\"\n                  )}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      {loading ? (\n        <Loader></Loader>\n      ) : (\n        <tbody {...getTableBodyProps()}>\n          <FixedSizeList\n            height={1500}\n            itemCount={rows.length}\n            itemSize={130}\n            width={\"100%\"}\n          >\n            {RenderRow}\n          </FixedSizeList>\n        </tbody>\n      )}\n    </TableW>\n  );\n}\n\nexport default Table;\n","import React, { useRef, useState } from \"react\";\nimport { TableS, Busqueda, BusquedaWrapper } from \"./tableStyles\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter\n  // useBlockLayout,\n  // useCallBack\n} from \"react-table\";\n// import { FixedSizeList } from \"react-window\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport Loader from \"../../login/loader\";\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n  flatColumns\n}) {\n  const [inputBusqueda, setInputBusqueda] = useState(\"\");\n  const count = preGlobalFilteredRows.length;\n  const inputTextRef = useRef();\n  return (\n    <tr>\n      <th colSpan={flatColumns.length}>\n        <BusquedaWrapper>\n          <span>Buscar: </span>\n          <Busqueda\n            value={globalFilter || \"\"}\n            onChange={e => {\n              setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n            }}\n            placeholder={`${count} registros...`}\n          />\n          {/* <Busqueda\n            value={inputBusqueda}\n            onChange={e => {\n              setInputBusqueda(e.target.value);\n            }}\n            onKeyDown={e =>\n              e.key === \"Enter\"\n                ? setGlobalFilter(inputBusqueda || undefined)\n                : \"\"\n            } */}\n          {/* /> */}\n          {/* <button onClick={() => setGlobalFilter(inputBusqueda || undefined)}>\n            Consultar\n          </button> */}\n        </BusquedaWrapper>\n      </th>\n    </tr>\n  );\n}\n\nconst diplayFilter = () => {\n  return;\n};\n\nfunction Table({\n  columns = [],\n  data = [],\n  filter = null,\n  redirect = null,\n  loading = false\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    flatColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    totalColumnsWidth\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useGlobalFilter,\n    // useBlockLayout,\n    useSortBy\n  );\n  return (\n    <TableS {...getTableProps()}>\n      <thead>\n        {filter && (\n          <GlobalFilter\n            preGlobalFilteredRows={preGlobalFilteredRows}\n            globalFilter={state.globalFilter}\n            setGlobalFilter={setGlobalFilter}\n            flatColumns={flatColumns}\n          />\n        )}\n        {headerGroups.map((headerGroup, i) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th\n                {...column.getHeaderProps(column.getSortByToggleProps())}\n                className={\n                  column.isSorted\n                    ? column.isSortedDesc\n                      ? \"isSortedAsc\"\n                      : \"isSortedDesc\"\n                    : \"\"\n                }\n              >\n                {column.render(\"Header\")}\n                <span>\n                  {column.isSorted ? (\n                    column.isSortedDesc ? (\n                      <FontAwesomeIcon icon={faSortDown} />\n                    ) : (\n                      <FontAwesomeIcon icon={faSortUp} />\n                    )\n                  ) : (\n                    \"\"\n                  )}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      {loading ? (\n        <Loader></Loader>\n      ) : (\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr\n                {...row.getRowProps()}\n                onClick={() => (redirect ? redirect(row.original) : null)}\n              >\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      )}\n    </TableS>\n  );\n}\n\nexport default Table;\n","import Table from \"./table\";\nexport default Table;\n","export const OrdersTable = [\n  {\n    Header: \"Código Pedido\",\n    accessor: \"orderCode\"\n  },\n  {\n    Header: \"Tienda\",\n    accessor: \"storeName\"\n  },\n\n  {\n    Header: \"Cliente\",\n    accessor: \"clientName\"\n  },\n  {\n    Header: \"Dirección\",\n    accessor: \"clientAddress\"\n  },\n  {\n    Header: \"Contacto\",\n    accessor: \"clientMobile\"\n  },\n  {\n    Header: \"Email\",\n    accessor: \"clientEmail\"\n  },\n  {\n    Header: \"Fecha Inicio\",\n    accessor: \"orderStartDate\"\n  },\n\n  {\n    Header: \"Fecha Cierre\",\n    accessor: \"orderFinishDate\"\n  },\n  {\n    Header: \"Status\",\n    accessor: \"orderStatus\"\n  }\n];\nexport const OrdersDetailTable = [\n  {\n    Header: \"Referencia\",\n    accessor: \"reference\"\n  },\n  {\n    Header: \"Img\",\n    accessor: \"imageURL\"\n  },\n  {\n    Header: \"Producto\",\n    accessor: \"productName\"\n  },\n  {\n    Header: \"Precio x Producto\",\n    accessor: \"price\"\n  },\n  {\n    Header: \"Cantidad\",\n    accessor: \"quantity\"\n  }\n];\n\nexport const ProductsTable = [\n  {\n    Header: \"Ref.\",\n    accessor: \"reference\"\n  },\n  {\n    Header: \"Img.\",\n    accessor: \"imageURL\"\n  },\n  {\n    Header: \"Nombre\",\n    accessor: \"name\"\n  },\n  {\n    Header: \"Descripción\",\n    accessor: \"description\"\n  },\n  {\n    Header: \"Categoría\",\n    accessor: \"categoryName\"\n  }\n];\n\nexport const CategoriesTable = [\n  {\n    Header: \"Categorias\",\n    accessor: \"name\"\n  }\n];\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  text-align: center;\n  h5 {\n    text-align: left;\n  }\n  & > div:first-child {\n    width: 83%;\n  }\n  & > div:last-child {\n    width: 15%;\n  }\n  @media screen and (max-width: 720px) {\n    & > div {\n      width: 100% !important;\n      padding: 5px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  max-height: 500px;\n  overflow-x: scroll;\n  overflow-y: scroll;\n`;\n\nexport const Selector = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n  background-color: ${p => p.theme.bgColorDark};\n  text-align: center;\n  line-height: 30px;\n  cursor: pointer;\n`;\n\nexport const Modal = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: ${p => p.visibility};\n  section {\n    background: ${p => p.theme.bgColorDark};\n    padding: 40px;\n    position: relative;\n    span {\n      position: absolute;\n      top: 0;\n      right: 0;\n      margin-right: 10px;\n      font-size: 25px;\n      font-weight: 600;\n      color: ${p => p.theme.cOrange};\n      cursor: pointer;\n      &:hover {\n        color: ${p => p.theme.cOrangeDark};\n      }\n    }\n    input {\n      padding: 10px 10px;\n      background-color: ${p => p.theme.bgColor};\n      border: none;\n      outline: none;\n      color: ${p => p.theme.cWhite};\n    }\n  }\n`;\n\nexport const RigthSection = styled.section`\n  margin-top: 20px;\n  background: ${p => p.theme.bgColorLight};\n  border-bottom: 1px solid white;\n  button {\n    background: orange;\n    border: 0;\n    border-left: 1px solid ${p => p.theme.bgColorDark};\n    border-right: 1px solid ${p => p.theme.bgColorDark};\n    width: 100%;\n    outline: none;\n    color: white;\n    &:visited {\n      outline: none;\n    }\n    &:hover {\n      background: ${p => p.theme.cOrangeDark};\n    }\n  }\n`;\n","import axios from \"axios\";\nimport { apiEndPoint } from \"../utils/config.json\";\n\n// \"apiEndPoint\": \"https://reactmusicplayer-ab9e4.firebaseio.com\",\n// \"apiEndPoint\": \"https://wecommerceapi.azurewebsites.net\",\n\nlet axiosInstance = axios.create({\n  baseURL: apiEndPoint\n});\n\naxiosInstance.interceptors.response.use(\n  res => res.data,\n  error => {\n    console.log(error.res);\n    const expectedError =\n      error.response &&\n      error.response.status >= 400 &&\n      error.response.status < 500;\n    if (!expectedError) {\n      console.log(\"Logging the error\", error);\n      // alert(\"Un error inesperado ocurrio\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  get: axiosInstance.get,\n  post: axiosInstance.post,\n  put: axiosInstance.put,\n  delete: axiosInstance.delete\n};\n","import { useState, useEffect } from \"react\";\nimport http from \"../services/http\";\n\nexport const useGetHttp = url => {\n  const [data, setData] = useState([]);\n  const [loading, setloading] = useState(false);\n  useEffect(() => {\n    async function queries() {\n      setloading(true);\n      http.post(url).then(res => {\n        setData(res);\n        setloading(false);\n      });\n    }\n    // Execute the created function directly\n    queries();\n  }, [url]);\n  return [data, loading];\n};\n\nexport const usePostHttp = url => {\n  const postData = async data => {\n    const response = await http.post(url, data);\n    return response;\n  };\n  return [postData];\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Upload = () => {\n  const [file, setFile] = useState({ selectedFile: null });\n  const changeUploader = e => {\n    setFile(e.target.files[0]);\n    alert(JSON.stringify(file));\n  };\n  const submit = async () => {\n    // const doc = { name: \"perro\", filename: \"ERo\" };\n    const fd = new FormData();\n    fd.append(\"csv\", file, file.name);\n    console.log(fd.getAll(\"name\"));\n    // console.log();\n    // console.log(file);\n    const info = [{ Campo1: \"Hello\" }];\n    // const res = await axios.post(\n    //   \"https://wecommerceapiaz.azurewebsites.net/api/UploadProducts\",\n    //   info\n    // );\n    // console.log(res);\n  };\n  return (\n    <div>\n      <input type=\"file\" onChange={e => changeUploader(e)} />\n      <button onClick={() => submit()}>Submit</button>\n    </div>\n  );\n};\nexport default Upload;\n","import Products from \"./products\";\nexport default Products;\n","import React, { useMemo } from \"react\";\nimport Box from \"../../common/box\";\nimport TableWindow from \"../../common/table/tableWindow\";\nimport Loader from \"../../common/loader\";\nimport Table from \"../../common/table\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../common/button\";\nimport { ProductsTable, CategoriesTable } from \"../../utils/tablesHeaders\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"../../common/modal\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { Container, RigthSection } from \"./styles\";\nimport { useGetHttp } from \"../../hooks/useHttp\";\n\nimport Uploader from \"./uploadFile\";\n\nconst resToTable = arr => {\n  return arr.map(item => {\n    item[\"imageURL\"] = (\n      <img\n        src={item[\"imageURL\"]}\n        style={{\n          background: \"white\",\n          height: \"50px\",\n          width: \"50px\"\n        }}\n      />\n    );\n    return item;\n  });\n};\n\nconst Products = ({ history }) => {\n  const [categories, catLoad] = useGetHttp(\n    \"/GetCategoryProducts?ownerId=algomerkar\"\n  );\n  const [products, prodLoad] = useGetHttp(\"/GetProducts?ownerid=ALGOMERKAR\");\n  // const [modalStatus, setModalStatus, toogleModal] = useModal();\n  // const memoizedProducts = useMemo(() => resToTable(products), [products]);\n  const memoizedProducts = useMemo(() => resToTable(products), [products]);\n  const redirect = ({ id }) => {\n    history.push(`/products/${id}`);\n  };\n  return (\n    <div>\n      <h2>Productos</h2>\n      <Container>\n        <Box>\n          <TableWindow\n            columns={ProductsTable}\n            data={memoizedProducts}\n            redirect={redirect}\n            loading={prodLoad}\n          ></TableWindow>\n        </Box>\n        <Box>\n          <RigthSection>\n            <Table\n              columns={CategoriesTable}\n              data={categories}\n              filter={false}\n              loading={catLoad}\n            ></Table>\n            {/* <button onClick={toogleModal}>Agregar</button> */}\n            {/* <Button text=\"Add Category\" action={this.toggleModal} /> */}\n          </RigthSection>\n          <RigthSection>\n            <h6>Cambiar lista de precios</h6>\n            <a href=\"\">Plantilla_precios_Excel.xlsx</a>\n          </RigthSection>\n          <RigthSection>\n            <h6>Subir productos</h6>\n            <Uploader></Uploader>\n            <a href=\"\">Plantilla_productos_Excel.xlsx</a>\n          </RigthSection>\n        </Box>\n      </Container>\n      {/* <Modal\n        title=\"Nuevo Modal\"\n        isActive={modalStatus}\n        handleClose={() => setModalStatus(false)}\n      > */}\n      {/* <input\n          type=\"text\"\n          value={this.state.category}\n          onChange={this.changeCategory}\n        /> */}\n      {/* <Button text=\"Agregar\" action={this.addCategory} /> */}\n      {/* </Modal> */}\n    </div>\n  );\n};\n\nconst mapPropsToState = state => {\n  return {\n    products: state.productsPage.products\n  };\n};\n\nexport default connect(mapPropsToState, null)(Products);\n","// TIPOS DE ACCIONES\n\n// export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const SET_INITIAL_DATA = \"SET_INITIAL_DATA\";\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_ACCOUNTS = \"UPDATE_ACCOUNTS\";\nexport const SET_PRODUCT_LIST = \"SET_PRODUCT_LIST\";\nexport const SET_ORDERS_LIST = \"SET_ORDERS_LIST\";\n// export const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\n\n// CREADORE DE ACCIONES\n\nexport function updateProducts(payload) {\n  return { type: UPDATE_PRODUCTS, payload };\n}\n\nexport function updateAccounts(payload) {\n  return { type: UPDATE_ACCOUNTS, payload };\n}\n\nexport function setInitialData(payload) {\n  return {\n    type: SET_INITIAL_DATA,\n    payload\n  };\n}\n\nexport function setProductList(payload) {\n  return {\n    type: SET_PRODUCT_LIST,\n    payload\n  };\n}\nexport function setOrdersList(payload) {\n  return {\n    type: SET_ORDERS_LIST,\n    payload\n  };\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"../../common/box\";\nimport Button from \"../../common/button\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { updateAccounts } from \"../../services/actions\";\n\nconst Container = styled.section`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  & > div {\n    width: 48%;\n  }\n  @media screen and (max-width: 720px) {\n    & > div {\n      width: 100%;\n      padding: 5px;\n    }\n  }\n`;\n\nconst Form = styled.form``;\n\nconst Fsection = styled.section`\n  padding: 20px;\n  input,\n  textarea,\n  select {\n    padding: 5px 10px;\n    width: 100%;\n    background-color: ${p => p.theme.bgColor};\n    border: none;\n    outline: none;\n    color: ${p => p.theme.cWhite};\n  }\n  &#image {\n    text-align: center;\n    & > div {\n      position: relative;\n    }\n    & > div div {\n      visibility: hidden;\n      height: 40px;\n      width: 40px;\n      border-radius: 20px;\n      background-color: ${p => p.theme.cOrange};\n      color: white;\n      text-align: center;\n      line-height: 40px;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      margin: auto;\n      cursor: pointer;\n      &:hover {\n        visibility: visible;\n      }\n    }\n    img {\n      &:hover + div {\n        visibility: visible;\n      }\n      cursor: pointer;\n      display: block;\n      width: 250px;\n      height: 250px;\n      background-color: ${p => p.theme.bgColor};\n      margin: 25px auto;\n      object-fit: cover;\n      overflow: hidden;\n    }\n  }\n`;\n\nclass accounts extends Component {\n  state = {\n    selection: \"null\",\n    accounts: {}\n  };\n  componentDidMount() {\n    console.log(this.props);\n    const accounts = { ...this.props.accounts };\n    console.log(accounts);\n    this.setState({ accounts });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.accounts !== this.props.accounts) {\n      const accounts = { ...this.props.accounts };\n      this.setState({ accounts });\n    }\n  }\n  updateAccounts = e => {\n    e.preventDefault();\n    this.props.updateAccounts(this.state.accounts);\n    alert(\"The account has been updated\");\n  };\n  deleteImage = () => {\n    const { selection } = this.state;\n    if (selection === \"null\") return null;\n    const accounts = { ...this.state.accounts };\n    accounts[selection].profilePic = null;\n    this.setState({ accounts });\n  };\n  changeValue = e => {\n    const { selection, accounts } = this.state;\n    if (selection === \"null\") return null;\n    const { value, name, files } = e.target;\n    const account = files\n      ? {\n          ...accounts[selection],\n          [name]: URL.createObjectURL(files[0])\n        }\n      : { ...accounts[selection], [name]: value };\n    accounts[selection] = account;\n    this.setState({ accounts });\n    console.log(accounts);\n  };\n  changeSelection = e => {\n    const selection = e.target.value;\n    this.setState({ selection });\n    console.log(this.state.accounts);\n  };\n  upload = e => {\n    e.preventDefault();\n    console.log(this.state.selection);\n    if (this.state.selection === \"null\") return null;\n    this.refs.fileUploader.click();\n  };\n  render() {\n    const { accounts, selection } = this.state;\n    const account = accounts[selection] || {};\n    return (\n      <div>\n        <h2>Accounts</h2>\n        <Box title=\"List of accounts\">\n          <Fsection>\n            <p>Choose the account</p>\n            <select\n              name=\"category\"\n              onChange={this.changeSelection}\n              value={selection}\n            >\n              <option disabled value=\"null\">\n                {\" \"}\n                -- SELECT AN OPTION --\n              </option>\n              {Object.keys(accounts).map((i, k) => (\n                <option value={i} key={k}>\n                  {i}\n                </option>\n              ))}\n            </select>\n          </Fsection>\n        </Box>\n        <Container>\n          <Box title=\"Change Avatar\">\n            <Fsection id=\"image\">\n              <div onClick={this.deleteImage}>\n                <img\n                  src={\n                    account.profilePic ||\n                    \"https://www.tibs.org.tw/images/default.jpg\"\n                  }\n                  alt=\"\"\n                />\n                <div>\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </div>\n              </div>\n              <Button text=\"Change Image\" action={this.upload} />\n              <input\n                type=\"file\"\n                name=\"profilePic\"\n                ref=\"fileUploader\"\n                style={{ display: \"none\" }}\n                onChange={this.changeValue}\n              />\n            </Fsection>\n          </Box>\n          <Box title=\"Accoun Settings\">\n            <Form>\n              <Fsection>\n                <p>Name</p>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  defaultValue={account.name}\n                  onChange={this.changeValue}\n                />\n              </Fsection>\n              <Fsection>\n                <p>Email</p>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  defaultValue={account.email}\n                  onChange={this.changeValue}\n                />\n              </Fsection>\n              <Fsection>\n                <p>Password</p>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  defaultValue={account.password}\n                  onChange={this.changeValue}\n                />\n              </Fsection>\n              <Fsection>\n                <p>Phone</p>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  defaultValue={account.phone}\n                  onChange={this.changeValue}\n                />\n              </Fsection>\n              <Fsection>\n                <Button text=\"Update account\" action={this.updateAccounts} />\n              </Fsection>\n            </Form>\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    accounts: state.accountsPage\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAccounts: data => dispatch(updateAccounts(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(accounts);\n","import Accounts from \"./accounts\";\nexport default Accounts;\n","import styled from \"styled-components\";\n\nexport const InputTextStyles = styled.section`\n  padding-bottom: 5px;\n  label {\n    display: block;\n    color: white;\n  }\n  input {\n    /* margin: 0px 20px; */\n    padding: 5px 10px;\n    background-color: transparent;\n    color: white;\n    outline: none;\n    width: calc(100% - 40px);\n    font-size: 10px;\n    .pac-selected,\n    .pac-item,\n    .pac-container {\n      background-color: transparent;\n    }\n  }\n  button {\n    color: ${p => p.theme.cWhite};\n    padding: 5px 15px;\n    border-color: ${p => p.theme.cOrange};\n    background: ${p => p.theme.cOrange};\n    margin: 20px auto 30px;\n  }\n  div {\n    min-height: 20px;\n    display: block;\n    color: #d24d57;\n    font-size: 14px;\n    text-align: center;\n    font-weight: 700;\n  }\n`;\n\nexport const ButtonStyles = styled.button`\n  color: ${p => p.theme.cWhite};\n  padding: 10px 15px;\n  border-color: ${p => p.theme.cOrange};\n  background-color: ${p => p.theme.cOrange};\n  margin: 20px 10px 30px;\n  &:hover {\n    background-color: ${p => p.theme.cOrangeDark};\n    border-color: ${p => p.theme.cOrangeDark};\n    color: white;\n    text-decoration: none;\n  }\n`;\n","import inputText from \"./inputText\";\nimport selector from \"./selector\";\nimport button from \"./button\";\nimport radioGroup from \"./radioGroup\";\n\nexport const Selector = selector;\nexport const InputText = inputText;\nexport const Button = button;\nexport const RadioGroup = radioGroup;\n","import React from \"react\";\nimport { InputTextStyles } from \"./styles\";\n\nconst Selector = ({\n  name,\n  label,\n  options = [],\n  touched = {},\n  errors = {},\n  ...rest\n}) => {\n  return (\n    <InputTextStyles>\n      <label htmlFor={name}>{label}</label>\n      <select name={name} {...rest}>\n        <option value=\"\" label=\"Select...\" />\n        {options.map(item => (\n          <option value={item.id} label={item.name} key={item.id + item.name} />\n        ))}\n      </select>\n      <div>{touched[name] && errors[name] ? errors[name] : null}</div>\n    </InputTextStyles>\n  );\n};\nexport default Selector;\n","import React from \"react\";\nimport { InputTextStyles } from \"./styles\";\n\n/*\n  Mandatory fields: \n    type,\n    onChange,\n    onBlur,\n    value,\n    id,\n*/\n\nconst InputText = ({ label, name, errors = {}, touched = {}, ...rest }) => {\n  return (\n    <InputTextStyles>\n      <label htmlFor={name}>{label}</label>\n      <input name={name} {...rest} />\n      <div>{touched[name] && errors[name] ? errors[name] : null}</div>\n    </InputTextStyles>\n  );\n};\n\nexport default InputText;\n","import React from \"react\";\nimport { ButtonStyles } from \"./styles\";\n\n/*\n  Mandatory fields: \n    type,\n    onChange,\n    onBlur,\n    value,\n    id,\n*/\n\nconst Button = ({ children }) => {\n  return <ButtonStyles type=\"submit\">{children}</ButtonStyles>;\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst RadioGroup = ({ title, value, name, options = [], setFieldValue }) => {\n  return (\n    <div style={{ marginBottom: \"10px\" }}>\n      <p>{title}</p>\n      {options.map(({ label, inputValue }) => {\n        return (\n          <div>\n            <input\n              type=\"radio\"\n              name={name}\n              value={inputValue}\n              checked={value === inputValue}\n              onChange={() => setFieldValue(name, inputValue)}\n            />\n            <span style={{ color: \"white\", paddingLeft: \"10px\" }}>{label}</span>\n            <br />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RadioGroup;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputText, Selector, Button } from \"../../common/form\";\nimport { useGetHttp } from \"../../hooks/useHttp\";\n\n// {\n//   id: 1\n// ownerId: \"ALGOMERKAR\"\n// reference: \"0001\"\n// name: \"Detergente en polvo ARIEL\"\n// description: \"Detergente en polvo para lavar ropa blanca y de color ARIEL\"\n// categoryId: 1\n// imageURL: \"https://firebasestorage.googleapis.com/v0/b/merkar-5e730.appspot.com/o/ariel.jpg?alt=media&token=b895c378-ac5f-4868-8596-9aa288eb1536\"\n// measurementUnit: \"Kilogramo\"\n// weight: 1\n// active: true\n// categoryName: \"Lácteos\"\n// }\n\nconst initialValuesMain = {\n  ownerId: \"\",\n  reference: \"\",\n  name: \"\",\n  description: \"\",\n  categoryId: \"\",\n  imageURL: \"\",\n  measurementUnit: \"\",\n  weight: 0,\n  active: true,\n  categoryName: \"\"\n};\n\nconst ProductMainForm = ({ submit, initialValues = initialValuesMain }) => {\n  const categoriesUrl = \"/GetCategoryProducts?ownerId=algomerkar\";\n  const [categories] = useGetHttp(categoriesUrl);\n  const formik = useFormik({\n    initialValues,\n    onSubmit: values => {\n      submit(values);\n      alert(JSON.stringify(values));\n    },\n    enableReinitialize: true,\n    validationSchema: Yup.object({\n      reference: Yup.string().required(\"*Este campo es obligatorio\"),\n      name: Yup.string().max(100, \"*Máximo 100 caracteres\"),\n      description: Yup.string().max(200, \"*Máximo 20 caracteres\"),\n      weight: Yup.number(),\n      categoryId: Yup.string().required(\"*La categoria es obligatoria\")\n    })\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    isSubmitting,\n    errors,\n    touched,\n    handleBlur\n  } = formik;\n  console.log(initialValues);\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputText\n        id=\"reference\"\n        name=\"reference\"\n        type=\"text\"\n        label=\"Referencia\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.reference}\n        errors={errors}\n        touched={touched}\n      />\n      <InputText\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        label=\"Nombre\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.name}\n        errors={errors}\n        touched={touched}\n      />\n      <InputText\n        id=\"description\"\n        name=\"description\"\n        type=\"text\"\n        label=\"Descripción\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.description}\n        errors={errors}\n        touched={touched}\n      />\n      <Selector\n        id=\"categoryId\"\n        name=\"categoryId\"\n        label=\"Descripción\"\n        options={categories}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.categoryId}\n        errors={errors}\n        touched={touched}\n      />\n      <InputText\n        id=\"measurementUnit\"\n        name=\"measurementUnit\"\n        type=\"text\"\n        label=\"Unidad de medida\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.measurementUnit}\n        errors={errors}\n        touched={touched}\n      />\n      <InputText\n        id=\"weight\"\n        name=\"weight\"\n        type=\"number\"\n        label=\"Peso\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.weight}\n        errors={errors}\n        touched={touched}\n      />\n\n      <Button type=\"submit\">GUARDAR</Button>\n    </form>\n  );\n};\n\nexport default ProductMainForm;\n","import firebase from \"../utils/firebase\";\n\nconst storage = firebase.storage();\n\nexport const useImageUpload = path => {\n  const getImageUrl = async file => {\n    const uploadTask = storage.ref(`${path}${file.name}`).put(file);\n    return uploadTask\n      .then(res => {\n        return res.ref.getDownloadURL();\n      })\n      .then(url => {\n        return url;\n      });\n  };\n\n  return [getImageUrl];\n};\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  margin: 20px auto;\n  width: 250px;\n  position: relative;\n  border: 2px dashed ${p => p.theme.cOrangeDark};\n  padding: 5px;\n  img {\n    width: 100%;\n    cursor: pointer;\n  }\n  button {\n    position: absolute;\n    display: none;\n    margin: auto;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    width: 100;\n    height: 50px;\n    background: rgba(0, 0, 0, 0.5);\n    border-radius: 5px;\n    color: white;\n  }\n  &:hover {\n    background: ${p => p.theme.bgColorLight};\n    border-color: ${p => p.theme.cOrange};\n    button {\n      display: block;\n      outline: none;\n    }\n  }\n`;\n\nconst Button = styled.button``;\n\nconst defaultListener = () => {};\n\nconst ImageUpload = ({ initialImg, changeListener = defaultListener }) => {\n  const [image, setImage] = useState(null);\n  const searchFile = useRef(null);\n  const defaultImg =\n    \"https://d167y3o4ydtmfg.cloudfront.net/240/studio/assets/v1554362197556_613007740/Default-coming-soon.jpg\";\n  const handleChange = async ({ target }) => {\n    const [file] = target.files;\n    setImage(URL.createObjectURL(file));\n    // Comprimir archivo de imagen\n    changeListener(file);\n  };\n  const upload = e => {\n    e.preventDefault();\n    searchFile.current.click();\n  };\n  return (\n    <Wrapper>\n      <img\n        src={image || initialImg || defaultImg}\n        alt=\"Product Image\"\n        onClick={upload}\n      />\n      <Button onClick={upload}> Cambiar Imagen</Button>\n      <input\n        type=\"file\"\n        name=\"img\"\n        ref={searchFile}\n        style={{ display: \"none\" }}\n        onChange={handleChange}\n      />\n    </Wrapper>\n  );\n};\nexport default ImageUpload;\n","import ImageUpload from \"./imageUpload\";\nexport default ImageUpload;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.section`\n  /* background: ${p => p.theme.cOrange}; */\n  display: flex;\n  & > div {\n    flex: 1;\n  }\n`;\n\nexport const ProductDetailForm = styled.form`\n  h4 {\n    color: orange;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  overflow: hidden;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  @media screen and (max-width: 720px) {\n    flex-direction: column-reverse;\n  }\n`;\nexport const Section = styled.section`\n  flex: 1;\n  div#double {\n    display: flex;\n  }\n  #image {\n    text-align: center;\n    img {\n      display: block;\n      width: 250px;\n      height: 250px;\n      background: black;\n      margin: 20px auto;\n      object-fit: cover;\n      overflow: hidden;\n    }\n  }\n`;\n\nexport const Fsection = styled.section`\n  padding: 20px;\n  input,\n  textarea,\n  select {\n    padding: 5px 10px;\n    width: 100%;\n    background-color: ${p => p.theme.bgColor};\n    border: none;\n    outline: none;\n    color: ${p => p.theme.cWhite};\n  }\n\n  button {\n    color: ${p => p.theme.cWhite};\n    padding: 5px 15px;\n    border-color: ${p => p.theme.cOrange};\n    background: ${p => p.theme.cOrange};\n    margin: 20px auto 30px;\n  }\n`;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { InputText, Selector, Button, RadioGroup } from \"../../common/form\";\nimport { ProductDetailForm } from \"./styles\";\n\nconst initialValuesMain = [\n  {\n    storeId: \"\",\n    productId: \"\",\n    price: \"9000\",\n    unitValue: \"19\",\n    badge: \"60%\",\n    promotion: false,\n    active: true\n  }\n];\nconst ProductPricesForm = ({ submit, initialValues = [] }) => {\n  const formik = useFormik({\n    initialValues,\n    onSubmit: values => {\n      console.log(values);\n    },\n    enableReinitialize: true\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    setFieldValue,\n    isSubmitting,\n    errors,\n    touched,\n    handleBlur\n  } = formik;\n  return (\n    <ProductDetailForm onSubmit={handleSubmit}>\n      {initialValues.map((store, i) => {\n        if (!values[i]) return;\n        return (\n          <section>\n            <h4>\n              {store.storeId} - {store.storeName}\n            </h4>\n            <div>\n              <InputText\n                id=\"price\"\n                name={`[${i}].price`}\n                type=\"number\"\n                label=\"PRECIO\"\n                onChange={handleChange}\n                value={values[i][\"price\"]}\n              />\n              <InputText\n                id=\"badge\"\n                name={`[${i}].badge`}\n                type=\"text\"\n                label=\"ETIQUETA\"\n                onChange={handleChange}\n                value={values[i][\"badge\"]}\n              />\n              <RadioGroup\n                title=\"PROMOCION\"\n                name={`[${i}].promotion`}\n                value={values[i][\"promotion\"]}\n                setFieldValue={setFieldValue}\n                options={[\n                  { label: \"Es una promoción\", inputValue: true },\n                  { label: \"No es una promoción\", inputValue: false }\n                ]}\n              ></RadioGroup>\n              <RadioGroup\n                title=\"ACTIVO\"\n                name={`[${i}].active`}\n                value={values[i][\"active\"]}\n                setFieldValue={setFieldValue}\n                options={[\n                  { label: \"Activo\", inputValue: true },\n                  { label: \"Inactivo\", inputValue: false }\n                ]}\n              ></RadioGroup>\n            </div>\n            <hr />\n          </section>\n        );\n      })}\n      <Button type=\"submit\">Bumit</Button>\n    </ProductDetailForm>\n  );\n};\n\nexport default ProductPricesForm;\n","import Product from \"./product\";\nexport default Product;\n","import React, { useState } from \"react\";\nimport ProductMainForm from \"./productMainForm\";\nimport { useGetHttp, usePostHttp } from \"../../hooks/useHttp\";\nimport { useImageUpload } from \"../../hooks/useImageUpload\";\nimport ImageUpload from \"../../common/imageUpload\";\nimport ProductPricesForm from \"./productPricesForm\";\nimport Box from \"../../common/box\";\nimport { Wrapper, ImageContainer } from \"./styles\";\n\nconst Product = ({ match }) => {\n  const { id } = match.params;\n  const [storesByProduct] = useGetHttp(\n    `GetStoresByProduct?productid=${id}&ownerid=ALGOMERKAR`\n  );\n  const [product] = useGetHttp(`GetProductById?productid=${id}`);\n  const [postProduct] = usePostHttp(\"UpdateProduct\");\n  const [newImgFile, setNewImgFile] = useState();\n  const [getImageUrl] = useImageUpload(\"/ALGOMERKAR/products/\");\n  const imageChange = file => {\n    setNewImgFile(file);\n  };\n  const submitMainForm = async values => {\n    if (newImgFile) {\n      // Se sube la imagen a firebase y se captura la url\n      const url = await getImageUrl(newImgFile);\n      values[\"imageURL\"] = url;\n    }\n    const jsonProduct = JSON.stringify(values);\n    postProduct(jsonProduct).then(res => {\n      console.log(res);\n    });\n  };\n  console.log(storesByProduct);\n  return (\n    <Wrapper>\n      <Box>\n        <ImageContainer>\n          <ImageUpload\n            initialImg={product[0] && product[0][\"imageURL\"]}\n            changeListener={imageChange}\n          ></ImageUpload>\n        </ImageContainer>\n        <ProductMainForm\n          submit={submitMainForm}\n          initialValues={product[0]}\n        ></ProductMainForm>\n      </Box>\n      <Box>\n        <h2 style={{ textAlign: \"right\", marginRight: \"50px\" }}>\n          Precios y puntos de venta\n        </h2>\n        <ProductPricesForm initialValues={storesByProduct}></ProductPricesForm>\n      </Box>\n    </Wrapper>\n  );\n};\n\nexport default Product;\n","import React, { useState, useMemo } from \"react\";\nimport Table from \"../../common/table\";\nimport Loader from \"../../login/loader\";\nimport Box from \"../../common/box\";\nimport http from \"../../services/http\";\nimport { OrdersTable } from \"../../utils/tablesHeaders\";\nimport { useGetHttp } from \"../../hooks/useHttp\";\n\nconst orderStatus = {\n  pending: \"Esta en la canastilla del cliente\",\n  enquueued: \"El cliente lo lanzo\",\n  processing: \"El pedido esta en alistamiento\",\n  ready: \"El pedido esta listo para enviar\",\n  shipped: \"Pedido fue envíado\",\n  delivered: \"Entregado\",\n  canceled: \"Ya no va\"\n};\n\nconst formatDate = date => {\n  const d = new Date(date);\n  return (\n    d.getDate() +\n    \"/\" +\n    (d.getMonth() + 1) +\n    \"/\" +\n    d.getFullYear() +\n    \" ( \" +\n    d.getHours() +\n    \"h:\" +\n    d.getMinutes() +\n    \"m ) \"\n  );\n};\n\nconst resToTable = arr => {\n  return arr.map(item => {\n    item[\"orderCode\"] = item[\"id\"];\n    item[\"orderStartDate\"] = formatDate(item[\"orderStartDate\"]);\n    item[\"orderFinishDate\"] = formatDate(item[\"orderFinishDate\"]);\n    item[\"orderStatus\"] = item[\"orderStatusId\"];\n    item[\"clientName\"] = item[\"name\"] + \" \" + item[\"lastName\"];\n    return item;\n  });\n};\n\nconst Orders = ({ history }) => {\n  const [orders, loadingOrders] = useGetHttp(\"GetOrders?ownerid=algomerkar\");\n  const memoizedOrders = useMemo(() => resToTable(orders), [orders]);\n  const redirect = ({ id }) => {\n    // console.log(JSON.stringify(item));\n    // const { reference } = item;\n    history.push(`/orders/${id}`);\n  };\n  return (\n    <div>\n      <h2>Ordenes</h2>\n      <Box title=\"Todas las ordenes\">\n        {loadingOrders ? (\n          <Loader></Loader>\n        ) : (\n          <Table\n            columns={OrdersTable}\n            data={memoizedOrders}\n            redirect={redirect}\n            loading={loadingOrders}\n          ></Table>\n        )}\n      </Box>\n    </div>\n  );\n};\nexport default Orders;\n","import Orders from \"./orders\";\nexport default Orders;\n","import styled from \"styled-components\";\n\nexport const FormOrder = styled.form`\n  display: flex;\n  justify-content: space-between;\n  h3 {\n    margin-right: 20px;\n  }\n  button {\n    margin: 5px;\n    height: 30px;\n  }\n`;\nexport const OrderBody = styled.section`\n  display: flex;\n  padding: 30px;\n  margin-top: 20px;\n  p {\n    font-size: 20px;\n    span {\n      margin-right: 15px;\n      color: orange;\n    }\n    margin-bottom: 20px;\n  }\n  h2 {\n    text-align: center;\n    margin-bottom: 50px;\n  }\n  div {\n    flex: 1;\n  }\n  background: ${p => p.theme.bgColor};\n`;\n\nexport const OrderNav = styled.nav`\n  display: flex;\n  justify-content: space-around;\n  span {\n    color: orange;\n    padding-left: 20px;\n  }\n  form {\n    h3 {\n      color: orange;\n    }\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-around;\n    input {\n      margin-left: 20px;\n    }\n  }\n  section.status {\n    padding: 20px;\n    border: 2px dashed orange;\n    text-align: center;\n    p {\n      color: orange;\n    }\n    h2 {\n      text-transform: uppercase;\n    }\n  }\n  div {\n    color: white;\n  }\n`;\n","import React from \"react\";\nimport { Selector } from \"../../common/form\";\nimport { useGetHttp } from \"../../hooks/useHttp\";\nimport { FormOrder } from \"./styles\";\n\nconst OrderForm = ({ orderInCourse }) => {\n  const [status] = useGetHttp(\"/GetOrderStatusList\");\n  console.log(\"Esttus de la order\", status);\n  console.log(orderInCourse);\n  return (\n    <FormOrder action=\"\">\n      <h3>Cambiar estado</h3>\n      <Selector\n        id=\"categoryId\"\n        name=\"categoryId\"\n        // label=\"Descripción\"\n        options={status}\n        // onChange={handleChange}\n        // onBlur={handleBlur}\n        // value={values.categoryId}\n        // errors={errors}\n        // touched={touched}\n      />\n      <button>Guardar</button>\n    </FormOrder>\n  );\n};\nexport default OrderForm;\n","import Order from \"./order\";\nexport default Order;\n","import React, { useMemo } from \"react\";\nimport { OrdersDetailTable } from \"../../utils/tablesHeaders\";\nimport { useGetHttp } from \"../../hooks/useHttp\";\nimport Box from \"../../common/box\";\nimport Loader from \"../../login/loader\";\nimport OrderForm from \"./orderForm\";\nimport { OrderNav, OrderBody } from \"./styles.js\";\nimport Table from \"../../common/table\";\n\n// orderId: 1\n// productId: 1\n// productName: \"Ariel\"\n// price: 9000\n// quantity: 1\n\n// id: 1\n// localId: 1\n// storeId: 1\n// orderStatusId: \"Enqueued\"\n// orderStartDate: \"2020-01-29T00:00:00\"\n// orderFinishDate: \"2020-01-29T00:00:00\"\n// customerId: \"5ME7EPsQFLZcPQUQq5HjRyWuDGg2\"\n// clientAddress: \"Calle\"\n// clientMobile: \"3002695678\"\n// clientEmail: \"carlos@mail\"\n// userId: \"0QOQ87L5AzdPw324kb3z27hzapB3\"\n// clientName: \"Carlos Javier\"\n// clientLastName: \"Salazar\"\n// storeName: \"Merkar 170 \"\n\nconst resToTable = arr => {\n  return arr.map(item => {\n    item[\"imageURL\"] = (\n      <img\n        src={item[\"imageURL\"]}\n        style={{\n          background: \"white\",\n          height: \"50px\",\n          width: \"50px\"\n        }}\n      />\n    );\n    return item;\n  });\n};\n\nconst Order = ({ match }) => {\n  const { id } = match.params;\n  const [orderHeader, loadingHeader] = useGetHttp(`/GetOrder?orderid=${id}`);\n  const [orderDetail, loadingDetail] = useGetHttp(\n    `/GetOrderDetail?orderId=${id}`\n  );\n  const memoizedOrders = useMemo(() => resToTable(orderDetail), [orderDetail]);\n  const orderMain = orderHeader[0] ? orderHeader[0] : [{}];\n  console.log(orderDetail);\n  if (loadingDetail || loadingHeader) return <Loader></Loader>;\n  return (\n    <div>\n      <h2>Order Module</h2>\n      <Box>\n        <OrderNav>\n          <section>\n            <h1>\n              ORDEN --> <span>{orderMain.id}</span>\n            </h1>\n            <p>{orderMain.storeName}</p>\n          </section>\n          <section className=\"status\">\n            <p>ESTADO</p>\n            <h2>{orderMain.orderStatusId}</h2>\n          </section>\n          <div>\n            <div>Fecha Inicio: {orderMain.orderStartDate}</div>\n            <div>Fecha modificacion: {orderMain.orderFinishDate}</div>\n            <OrderForm></OrderForm>\n          </div>\n        </OrderNav>\n        <OrderBody>\n          <div>\n            <h2>CLIENTE</h2>\n            <p>\n              <span>Id del cliente: </span> {orderMain.customerId}\n            </p>\n            <p>\n              <span>Nombre del Cliente: </span> {orderMain.clientName}\n            </p>\n            <p>\n              <span>Apellido del Cliente: </span> {orderMain.clientLastName}\n            </p>\n            <p>\n              <span>Dirección del Cliente: </span> {orderMain.clientAddress}\n            </p>\n            <p>\n              <span>Celular del Cliente: </span> {orderMain.clientMobile}\n            </p>\n            <p>\n              <span>Eamil del Cliente: </span> {orderMain.clientEmail}\n            </p>\n          </div>\n          <h1>--></h1>\n          <div>\n            <h2>PEDIDO</h2>\n            <Table\n              columns={OrdersDetailTable}\n              data={memoizedOrders}\n              loading={loadingDetail}\n            ></Table>\n          </div>\n        </OrderBody>\n      </Box>\n    </div>\n  );\n};\nexport default Order;\n","import React from \"react\";\nimport Nav from \"../common/navBar\";\nimport styled from \"styled-components\";\nimport { Switch, Route } from \"react-router-dom\";\nimport DashBoard from \"./main\";\nimport Products from \"./products\";\nimport Accounts from \"./accounts\";\nimport Product from \"./product\";\nimport Orders from \"./orders\";\nimport Order from \"./order\";\nimport { useGetHttp } from \"../hooks/useHttp\";\n// REDUX\nimport { connect } from \"react-redux\";\nimport { setProductList } from \"../services/actions\";\nimport { setOrdersList } from \"../services/actions\";\n\nconst Wrapper = styled.main`\n  padding: 0px 50px;\n  margin: 50px auto;\n  @media screen and (max-width: 720px) {\n    width: 100%;\n    padding: 5px;\n  }\n`;\n\nconst Intranet = () => {\n  return (\n    <div>\n      <Nav />\n      <Wrapper>\n        <Switch>\n          <Route path=\"/accounts\">\n            <Accounts />\n          </Route>\n          <Route path=\"/products/:id\" component={Product} />\n          <Route path=\"/products\" component={Products} />\n          <Route path=\"/orders/:id\" component={Order} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\">\n            <DashBoard />\n          </Route>\n        </Switch>\n      </Wrapper>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveProducts: data => {\n      dispatch(setProductList(data));\n    },\n    saveOrders: data => {\n      dispatch(setOrdersList(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Intranet);\n","import Intranet from \"./intranet\";\nexport default Intranet;\n","import React, { useContext } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Theme from \"./utils/theme\";\nimport Login from \"./login\";\nimport Loader from \"./login/loader\";\nimport Intranet from \"./intranet\";\nimport { AuthProvider, AuthContext } from \"./services/auth\";\n// REDUX\nimport { connect } from \"react-redux\";\nimport { setInitialData } from \"./services/actions\";\n//STYLES\nimport \"./App.css\";\nimport axios from \"axios\";\n// import { id } from \"postcss-selector-parser\";\naxios.defaults.baseURL = \"https://wecommerceapi.azurewebsites.net\";\n\nconst Wrapper = styled.main`\n  min-height: 100vh;\n  background-color: ${props => props.theme.bgColor};\n  overflow: hidden;\n`;\n\n// const Loader = () => {\n//   return <div>Loading</div>;\n// };\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const { currentUser, loadingUser } = useContext(AuthContext);\n  const routing = () => {\n    if (currentUser) {\n      return children;\n    }\n    if (!currentUser) {\n      if (loadingUser) {\n        return <Loader></Loader>;\n      } else {\n        return <Redirect to=\"/login\" />;\n      }\n    }\n  };\n  return <Route {...rest} render={routing} />;\n};\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={Theme}>\n      <AuthProvider>\n        <Router>\n          <Wrapper>\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <PrivateRoute path=\"/\">\n                <Intranet />\n              </PrivateRoute>\n            </Switch>\n          </Wrapper>\n        </Router>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n};\nconst mapStateToProps = (state, props) => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoadData: data => {\n      dispatch(setInitialData(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SET_INITIAL_DATA,\n  // UPDATE_PRODUCTS,\n  // UPDATE_ACCOUNTS,\n  SET_PRODUCT_LIST,\n  SET_ORDERS_LIST\n} from \"./actions\";\n\nconst InitialState = {\n  accountsPage: {},\n  dasbhoardPage: {\n    latestHits: {},\n    notifications: [],\n    orders: [],\n    performance: {},\n    storage: {}\n  },\n  productsPage: {\n    categories: [],\n    products: []\n  },\n  ordersPage: {\n    orders: []\n  }\n};\n\nfunction initState(state = InitialState, action) {\n  switch (action.type) {\n    case SET_PRODUCT_LIST:\n      const productsPage = { ...state.productsPage, products: action.payload };\n      return { ...state, productsPage };\n    case SET_ORDERS_LIST:\n      const ordersPage = { ...state.ordersPage, orders: action.payload };\n      return { ...state, ordersPage };\n    default:\n      return state;\n  }\n}\n\nexport default initState;\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers.js\";\n\n// Creating a store\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// REDUX\nimport { Provider } from \"react-redux\";\nimport store from \"./services/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}